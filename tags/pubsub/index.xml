<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pubsub on jackieli.dev</title><link>https://jackieli.dev/tags/pubsub/</link><description>Recent content in pubsub on jackieli.dev</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 13 May 2022 18:02:16 +0100</lastBuildDate><atom:link href="https://jackieli.dev/tags/pubsub/index.xml" rel="self" type="application/rss+xml"/><item><title>Temporal is a Control Plane</title><link>https://jackieli.dev/posts/temporal-is-control-plane/</link><pubDate>Fri, 13 May 2022 18:02:16 +0100</pubDate><guid>https://jackieli.dev/posts/temporal-is-control-plane/</guid><description>Use Temporal as a control plane, not as a data plane - @maxim
Problem In a typical ETL-like scenario, the data come as streams of rows. The workflow need to wait for a row to arrive and then kick off a series of processing steps synchronously or asynchronously. Example like:
From intuition, we might implement the workflow like this:
... sig := workflow.GetSignalChannel(ctx, &amp;#34;receiveRow&amp;#34;) // signal internally or externally to &amp;#34;receiveRow&amp;#34; channel for ctx.</description></item></channel></rss>