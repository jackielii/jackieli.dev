<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on jackieli.dev</title><link>https://jackieli.dev/tags/golang/</link><description>Recent content in golang on jackieli.dev</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 21 Jun 2022 14:14:58 +0100</lastBuildDate><atom:link href="https://jackieli.dev/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang Range Loop Capture</title><link>https://jackieli.dev/posts/golang-range-loop-capture/</link><pubDate>Tue, 21 Jun 2022 14:14:58 +0100</pubDate><guid>https://jackieli.dev/posts/golang-range-loop-capture/</guid><description>It&amp;rsquo;s commonly known in Go, using an range loop with closure, the closure captures the value by reference. E.g.
for i := range []int{1, 2, 3} { func() { fmt.Println(i) }() }</description></item></channel></rss>