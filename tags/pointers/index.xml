<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pointers on jackieli.dev</title><link>https://jackieli.dev/tags/pointers/</link><description>Recent content in pointers on jackieli.dev</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 26 Jun 2021 12:40:10 +0100</lastBuildDate><atom:link href="https://jackieli.dev/tags/pointers/index.xml" rel="self" type="application/rss+xml"/><item><title>Pointers in Go - used in sql.Scanner</title><link>https://jackieli.dev/posts/pointers-in-go-used-in-sql-scanner/</link><pubDate>Sat, 26 Jun 2021 12:40:10 +0100</pubDate><guid>https://jackieli.dev/posts/pointers-in-go-used-in-sql-scanner/</guid><description>Firstly a fun fact a lot people don&amp;rsquo;t know: when passing values between functions, it&amp;rsquo;s cheaper to pass values instead of pointers in Go. Reason is pointers to objects could be allocated on heap and it takes the computer more efforts to managed heap memory. While values are save on the stack, and stack is cheaper. For example, it&amp;rsquo;s preferable to:
type Foo struct { Bar string } func (f Foo) Echo() { println(f.</description></item></channel></rss>